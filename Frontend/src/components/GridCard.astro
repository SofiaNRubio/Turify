---
export interface ItemData {
    titulo: string;
    descripcion: string;
    imagen: string;
    tipo: string;
    ubicacion: string;
}

interface Props {
    items: ItemData[];
}

const { items = [] } = Astro.props as Props;
---

<style>
    .grid-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, 280px);
        gap: 1.5rem;
        padding: 1rem;
        width: 100%;
        max-width: 100%;
        box-sizing: border-box;
        justify-content: center; /* centra las cards */
    }

    .card {
        background: #fff;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 4px 20px rgba(34, 139, 34, 0.08);
        border: 2px solid transparent;
        text-align: center;
        position: relative;
        width: 100%;
        height: auto;
        display: flex;
        flex-direction: column;
        transition: all 0.3s ease;
    }

    .card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 30px rgba(34, 139, 34, 0.15);
        border-color: #228b22;
    }

    .card img {
        width: 100%;
        max-height: 140px;
        object-fit: cover;
        display: block;
        transition: transform 0.3s ease;
    }

    .card:hover img {
        transform: scale(1.03);
    }

    .card-content {
        padding: 1.2rem;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        position: relative;
    }

    .card-content h3 {
        margin: 0 0 0.8rem 0;
        font-size: 1.2rem;
        color: #228b22;
        font-weight: 600;
        line-height: 1.3;
    }

    .card-content p {
        font-size: 0.9rem;
        color: #666;
        margin: 0 0 1rem 0;
        flex-grow: 1;
        line-height: 1.4;
    }

    .card button {
        background: linear-gradient(135deg, #228b22, #32cd32);
        border: none;
        border-radius: 8px;
        padding: 0.6rem 1.2rem;
        color: white;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-top: auto;
        font-size: 0.9rem;
    }

    .card button:hover {
        background: linear-gradient(135deg, #006400, #228b22);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(34, 139, 34, 0.3);
    }

    /* Evitar conflictos con otros estilos */
    .grid-container * {
        box-sizing: border-box;
    }
</style>

<div class="grid-container" id="grid-container">
    {
        items.map((item: ItemData) => (
            <div class="card">
                <img src={item.imagen} alt={item.titulo} />
                <div class="card-content">
                    <h3>{item.titulo}</h3>
                    <p>{item.descripcion}</p>
                    <button>Ver MÃ¡s</button>
                </div>
            </div>
        ))
    }
</div>
