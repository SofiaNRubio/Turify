---
import AdminPanel from "../../components/AdminPanel.astro";
import { AdminMenu } from "../../components/AdminMenu";
import { apiFetch } from "../../utils/api";
import "../../style/gestion.css";
import "../../style/modal.css";

// Obtener parámetros de filtro de la URL
const { searchParams } = Astro.url;
const nombreFiltro = searchParams.get("nombre") || "";
const categoriaFiltro = searchParams.get("categoria_id") || "";
const empresaFiltro = searchParams.get("empresa_id") || "";

// Construir la URL de la API con los filtros usando el nuevo endpoint de gestión
let apiUrl = '/atractivos/gestion';
const filtros = [];
if (nombreFiltro) filtros.push(`nombre=${encodeURIComponent(nombreFiltro)}`);
if (categoriaFiltro)
    filtros.push(`categoria_id=${encodeURIComponent(categoriaFiltro)}`);
if (empresaFiltro)
    filtros.push(`empresa_id=${encodeURIComponent(empresaFiltro)}`);
if (filtros.length > 0) {
    apiUrl += `?${filtros.join("&")}`;
}

// Configuración de filtros aplicados

// Obtener categorías para el filtro
const categoriasResponse = await apiFetch("/categorias");
let categorias = [];
if (categoriasResponse.ok) {
    categorias = await categoriasResponse.json();
} else {
    console.error("Error al cargar categorías:", categoriasResponse.status);
}

// Obtener empresas para el filtro
const empresasResponse = await apiFetch("/empresas");
let empresas = [];
if (empresasResponse.ok) {
    empresas = await empresasResponse.json();
} else {
    console.error("Error al cargar empresas:", empresasResponse.status);
}

// Obtener elementos desde la API (atractivos y empresas)
const response = await apiFetch(apiUrl);
let elementos = [];

if (response.ok) {
    const elementosRaw = await response.json();
    
    // Mapear los elementos con nombres de empresa y categoría
    elementos = elementosRaw.map((elemento: any) => {
        const empresa = empresas.find((emp: any) => emp.id === elemento.empresa_id);
        const categoria = categorias.find((cat: any) => cat.id === elemento.categoria_id);
        
        return {
            ...elemento,
            empresa_nombre: empresa ? empresa.nombre : "-",
            categoria_nombre: categoria ? categoria.nombre : "Sin categoría"
        };
    });
} else {
    console.error("Error al cargar elementos:", response.status);
    elementos = [];
}

// Los elementos ya vienen procesados desde el backend con toda la lógica de filtrado
let elementosParaMostrar = [...elementos];

if (elementosParaMostrar.length === 0) {
    console.warn("No hay elementos para mostrar en la tabla");
}
---

<AdminPanel menu={AdminMenu}>
    <div class="admin-content">
        <div class="header">
            <h1>Empresas y Atractivos</h1>
            <a href="/admin/gestion-nuevo" class="btn btn-nuevo"
                ><span class="btn-icon">+</span>
                <span class="btn-text">Nuevo Atractivo</span></a
            >
        </div>
        <!-- Filtros -->
        <div class="filtros-container">
            <form id="filtros-form" method="get" action="/admin/gestion" class="filtros">
                <div class="filtro filtro-nombre">
                    <label for="nombre">Nombre de Atractivo:</label>
                    <input
                        type="text"
                        id="nombre"
                        name="nombre"
                        value={nombreFiltro}
                        placeholder="Buscar..."
                    />
                </div>

                <div class="filtro">
                    <label for="categoria_id">Categoría:</label>
                    <select id="categoria_id" name="categoria_id">
                        <option value="">Todas las categorías</option>
                        {
                            categorias.map((cat: any) => (
                                <option
                                    value={cat.id}
                                    selected={cat.id === categoriaFiltro}>
                                    {cat.nombre}
                                </option>
                            ))
                        }
                    </select>
                </div>
                <div class="filtro">
                    <label for="empresa_id">Empresa:</label>
                    <select id="empresa_id" name="empresa_id">
                        <option value="">Todas las empresas</option>
                        <option 
                            value="sin-empresa"
                            selected={empresaFiltro === "sin-empresa"}>
                            Sin empresa asignada
                        </option>
                        {
                            empresas.map((emp: any) => (
                                <option
                                    value={emp.id}
                                    selected={emp.id === empresaFiltro}>
                                    {emp.nombre}
                                </option>
                            ))
                        }
                    </select>
                </div>

                <div class="filtros-botones">
                    <button type="submit" class="btn-filtrar">Filtrar</button>
                    <a href="/admin/gestion" class="btn-limpiar">Limpiar</a>
                </div>
            </form>
        </div>
        <table>
            <thead>
                <tr>
                    <th>Empresa</th>
                    <th>Atractivo</th>
                    <th>Ubicación</th>
                    <th>Categoría</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                {
                    elementosParaMostrar.map((a: any) => (
                        <tr data-sin-empresa={!a.empresa_id || a.empresa_id === '' || a.empresa_id === 'null' ? 'true' : 'false'}>
                            <td>
                                <div class="cell-content">
                                    <span class="cell-label">Empresa:</span>
                                    <span class={`cell-value ${!a.empresa_id || a.empresa_id === '' || a.empresa_id === 'null' ? 'sin-empresa' : ''}`}>
                                        {!a.empresa_id || a.empresa_id === '' || a.empresa_id === 'null' ? 
                                            "-" : 
                                            a.empresa_nombre
                                        }
                                    </span>
                                </div>
                            </td>
                            <td>
                                <div class="cell-content">
                                    <span class="cell-label">Atractivo:</span>
                                    <span class="cell-value">{a.nombre || "-"}</span>
                                </div>
                            </td>
                            <td>
                                <div class="cell-content">
                                    <span class="cell-label">Ubicación:</span>
                                    <span class="cell-value">{a.direccion || "-"}</span>
                                </div>
                            </td>
                            <td>
                                <div class="cell-content">
                                    <span class="cell-label">Categoría:</span>
                                    <span class="cell-value">{a.categoria_nombre || "Sin categoría"}</span>
                                </div>
                            </td>
                            <td class="acciones">
                                {a.id ? (
                                    <>
                                        {/* Si el atractivo tiene empresa asignada */}
                                        {a.empresa_id && a.empresa_id !== '' && a.empresa_id !== 'null' ? (
                                            <a
                                                href={`/admin/gestion-nuevo?paso=2&empresa_id=${a.empresa_id}&accion=seleccionada&categoria_empresa=${a.categoria_id || ''}`}
                                                class="btn btn-agregar"
                                                title="Agregar nuevo atractivo a esta empresa">
                                                <span class="btn-icon">+</span>
                                                <span class="btn-text">Agregar</span>
                                            </a>
                                        ) : (
                                            <a
                                                href="/admin/gestion-nuevo"
                                                class="btn btn-agregar"
                                                title="Agregar nuevo atractivo">
                                                <span class="btn-icon">+</span>
                                                <span class="btn-text">Agregar</span>
                                            </a>
                                        )}
                                        <button
                                            class="btn btn-editar"
                                            data-id={a.id}
                                            data-empresa-id={a.empresa_id || ''}
                                            data-atractivo-nombre={a.nombre}
                                            data-empresa-nombre={a.empresa_nombre || '-'}
                                            data-sin-empresa={!a.empresa_id || a.empresa_id === '' || a.empresa_id === 'null' ? 'true' : 'false'}
                                            title={a.empresa_id && a.empresa_id !== '' && a.empresa_id !== 'null' ? "Editar este atractivo o empresa" : "Editar este atractivo (sin empresa)"}>
                                            <span class="btn-icon">✏️</span>
                                            <span class="btn-text">Editar</span>
                                        </button>
                                        <button
                                            class="btn btn-eliminar"
                                            data-id={a.id}
                                            data-empresa-id={a.empresa_id || ''}
                                            data-atractivo-nombre={a.nombre}
                                            data-empresa-nombre={a.empresa_nombre || '-'}
                                            data-sin-empresa={!a.empresa_id || a.empresa_id === '' || a.empresa_id === 'null' ? 'true' : 'false'}
                                            title="Eliminar este atractivo">
                                            <span class="btn-icon">🗑️</span>
                                            <span class="btn-text">Eliminar</span>
                                        </button>
                                    </>
                                ) : (
                                    <>
                                        <a
                                            href={`/admin/gestion-nuevo?paso=2&empresa_id=${a.empresa_id}&accion=seleccionada&categoria_empresa=${a.categoria_id || ''}`}
                                            class="btn btn-agregar"
                                            title="Agregar atractivo a esta empresa">
                                            <span class="btn-icon">+</span>
                                            <span class="btn-text">Agregar</span>
                                        </a>
                                        <button
                                            class="btn btn-editar"
                                            data-empresa-id={a.empresa_id}
                                            data-empresa-nombre={a.empresa_nombre}
                                            data-sin-atractivo="true"
                                            title="Editar esta empresa">
                                            <span class="btn-icon">✏️</span>
                                            <span class="btn-text">Editar</span>
                                        </button>
                                        <button
                                            class="btn btn-eliminar"
                                            data-empresa-id={a.empresa_id}
                                            data-empresa-nombre={a.empresa_nombre}
                                            data-sin-atractivo="true"
                                            title="Eliminar esta empresa">
                                            <span class="btn-icon">🗑️</span>
                                            <span class="btn-text">Eliminar</span>
                                        </button>
                                    </>
                                )}
                            </td>
                        </tr>
                    ))
                }
                {
                    elementosParaMostrar.length === 0 && (
                        <tr>
                            <td colspan="5" class="no-resultados">
                                No se encontraron atractivos ni empresas con los
                                filtros seleccionados
                            </td>
                        </tr>
                    )
                }
            </tbody>
        </table>
    </div>
    <!-- Modal para editar -->
    <div id="modal-editar" class="modal-overlay hidden">
        <div class="modal">
            <div class="modal-header">
                <h3>Editar</h3>
            </div>
            <div class="modal-body">
                <p>¿Qué deseas editar?</p>

                <div class="modal-options">
                    <div class="modal-option" data-option="atractivo">
                        <div class="modal-icon">🏞️</div>
                        <div>
                            <div class="modal-option-title">
                                Editar Atractivo
                            </div>
                            <div class="modal-option-description">
                                Modificar la información del atractivo turístico
                            </div>
                        </div>
                    </div>

                    <div class="modal-option" data-option="empresa">
                        <div class="modal-icon">🏢</div>
                        <div>
                            <div class="modal-option-title">Editar Empresa</div>
                            <div class="modal-option-description">
                                Modificar la información de la empresa asociada
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-actions">
                    <button
                        class="modal-btn modal-btn-primary"
                        id="btn-continuar-editar">Continuar</button
                    >
                    <button
                        class="modal-btn modal-btn-secondary"
                        id="btn-cancelar-editar">Cancelar</button
                    >
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para editar atractivo -->
    <div id="modal-editar-atractivo" class="modal-overlay hidden">
        <div class="modal">
            <div class="modal-header">
                <h3>Editar Atractivo</h3>
            </div>
            <div class="modal-body">
                <form id="form-editar-atractivo" class="modal-form">
                    <div class="form-group">
                        <label for="atractivo-nombre">Nombre:</label>
                        <input
                            type="text"
                            id="atractivo-nombre"
                            class="form-control"
                            required
                        />
                    </div>

                    <div class="form-group">
                        <label for="atractivo-descripcion">Descripción:</label>
                        <textarea
                            id="atractivo-descripcion"
                            class="form-control"
                            rows="3"></textarea>
                    </div>

                    <div class="form-group">
                        <label for="atractivo-categoria">Categoría:</label>
                        <select
                            id="atractivo-categoria"
                            class="form-control"
                            required>
                            {
                                categorias.map((cat: any) => (
                                    <option value={cat.id}>{cat.nombre}</option>
                                ))
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="atractivo-direccion">Dirección:</label>
                        <input
                            type="text"
                            id="atractivo-direccion"
                            class="form-control"
                        />
                    </div>

                    <div class="form-group">
                        <label for="atractivo-latitud">Latitud:</label>
                        <input
                            type="number"
                            id="atractivo-latitud"
                            class="form-control"
                            step="any"
                        />
                    </div>

                    <div class="form-group">
                        <label for="atractivo-longitud">Longitud:</label>
                        <input
                            type="number"
                            id="atractivo-longitud"
                            class="form-control"
                            step="any"
                        />
                    </div>

                    <div class="form-group">
                        <label for="atractivo-empresa">Empresa:</label>
                        <select id="atractivo-empresa" class="form-control">
                            <option value="">Sin empresa</option>
                            {
                                empresas.map((emp: any) => (
                                    <option value={emp.id}>{emp.nombre}</option>
                                ))
                            }
                        </select>
                    </div>

                    <div class="modal-actions">
                        <button
                            type="button"
                            class="modal-btn modal-btn-secondary"
                            id="btn-cancelar-editar-atractivo">Cancelar</button
                        >
                        <button
                            type="submit"
                            class="modal-btn modal-btn-primary"
                            >Guardar cambios</button
                        >
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal para editar empresa -->
    <div id="modal-editar-empresa" class="modal-overlay hidden">
        <div class="modal">
            <div class="modal-header">
                <h3>Editar Empresa</h3>
            </div>
            <div class="modal-body">
                <form id="form-editar-empresa" class="modal-form">
                    <div class="form-group">
                        <label for="empresa-nombre">Nombre:</label>
                        <input
                            type="text"
                            id="empresa-nombre"
                            class="form-control"
                            required
                        />
                    </div>

                    <div class="form-group">
                        <label for="empresa-descripcion">Descripción:</label>
                        <textarea
                            id="empresa-descripcion"
                            class="form-control"
                            rows="3"></textarea>
                    </div>

                    <div class="form-group">
                        <label for="empresa-email">Email:</label>
                        <input
                            type="email"
                            id="empresa-email"
                            class="form-control"
                        />
                    </div>

                    <div class="form-group">
                        <label for="empresa-telefono">Teléfono:</label>
                        <input
                            type="text"
                            id="empresa-telefono"
                            class="form-control"
                        />
                    </div>

                    <div class="form-group">
                        <label for="empresa-sitio-web">Sitio web:</label>
                        <input
                            type="url"
                            id="empresa-sitio-web"
                            class="form-control"
                        />
                    </div>

                    <div class="form-group">
                        <label for="empresa-direccion">Dirección:</label>
                        <input
                            type="text"
                            id="empresa-direccion"
                            class="form-control"
                        />
                    </div>

                    <div class="form-group">
                        <label for="empresa-latitud">Latitud:</label>
                        <input
                            type="number"
                            id="empresa-latitud"
                            class="form-control"
                            step="any"
                        />
                    </div>

                    <div class="form-group">
                        <label for="empresa-longitud">Longitud:</label>
                        <input
                            type="number"
                            id="empresa-longitud"
                            class="form-control"
                            step="any"
                        />
                    </div>

                    <div class="form-group">
                        <label for="empresa-categoria">Categoría:</label>
                        <select id="empresa-categoria" class="form-control">
                            <option value="">Seleccionar categoría</option>
                            {
                                categorias.map((cat: any) => (
                                    <option value={cat.id}>{cat.nombre}</option>
                                ))
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="empresa-img-url">URL de imagen:</label>
                        <input
                            type="url"
                            id="empresa-img-url"
                            class="form-control"
                            placeholder="https://ejemplo.com/imagen.jpg"
                        />
                        <small
                            >Sube tu imagen a <a
                                href="https://imgbb.com"
                                target="_blank"
                                rel="noopener noreferrer">ImgBB</a
                            > y pega la URL aquí</small
                        >
                    </div>

                    <div class="modal-actions">
                        <button
                            type="button"
                            class="modal-btn modal-btn-secondary"
                            id="btn-cancelar-editar-empresa">Cancelar</button
                        >
                        <button
                            type="submit"
                            class="modal-btn modal-btn-primary"
                            >Guardar cambios</button
                        >
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal para eliminar -->
    <div id="modal-eliminar" class="modal-overlay hidden">
        <div class="modal">
            <div class="modal-header">
                <h3>Eliminar</h3>
            </div>
            <div class="modal-body">
                <p>¿Qué deseas eliminar?</p>

                <div class="modal-options">
                    <div class="modal-option" data-option="atractivo">
                        <div class="modal-icon">🏞️</div>
                        <div>
                            <div class="modal-option-title">
                                Eliminar Atractivo
                            </div>
                            <div class="modal-option-description">
                                Eliminar solamente este atractivo turístico
                            </div>
                        </div>
                    </div>

                    <div class="modal-option" data-option="empresa">
                        <div class="modal-icon">🏢</div>
                        <div>
                            <div class="modal-option-title">
                                Eliminar Empresa
                            </div>
                            <div class="modal-option-description">
                                Eliminar la empresa y todos sus atractivos
                                asociados
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-actions">
                    <button
                        class="modal-btn modal-btn-primary"
                        id="btn-continuar-eliminar">Continuar</button
                    >
                    <button
                        class="modal-btn modal-btn-secondary"
                        id="btn-cancelar-eliminar">Cancelar</button
                    >
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de confirmación de eliminación -->
    <div id="modal-confirmar-eliminar" class="modal-overlay hidden">
        <div class="modal">
            <div class="modal-header">
                <h3>Confirmar eliminación</h3>
            </div>
            <div class="modal-body">
                <p id="texto-confirmar-eliminar">
                    ¿Estás seguro de que deseas eliminar este elemento?
                </p>

                <div class="modal-actions">
                    <button
                        class="modal-btn modal-btn-secondary"
                        id="btn-cancelar-confirmar">Cancelar</button
                    >
                    <button
                        class="modal-btn modal-btn-danger"
                        id="btn-confirmar-eliminar">Eliminar</button
                    >
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de notificación -->
    <div id="modal-notificacion" class="modal-overlay hidden">
        <div class="modal">
            <div class="modal-header">
                <h3 id="titulo-notificacion">Notificación</h3>
            </div>
            <div class="modal-body">
                <p id="texto-notificacion"></p>

                <div class="modal-actions">
                    <button
                        class="modal-btn modal-btn-primary"
                        id="btn-aceptar-notificacion">Aceptar</button
                    >
                </div>
            </div>
        </div>
    </div>
</AdminPanel>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Función apiFetch para uso en el cliente
        const apiFetch = async (endpoint: string, options: RequestInit = {}) => {
            const API_URL = window.location.origin.includes('localhost') 
                ? 'http://localhost:3000' 
                : 'https://api.turify.com'; // Ajustar según configuración
            const url = endpoint.startsWith('http') ? endpoint : `${API_URL}${endpoint}`;
            return fetch(url, options);
        };

        // Referencias a los modales
        const modalEditar = document.getElementById("modal-editar");
        const modalEliminar = document.getElementById("modal-eliminar");
        const modalConfirmarEliminar = document.getElementById(
            "modal-confirmar-eliminar"
        );
        const modalNotificacion = document.getElementById("modal-notificacion");

        // Botones editar
        const btnEditar = document.querySelectorAll(".btn-editar");
        const btnCancelarEditar = document.getElementById(
            "btn-cancelar-editar"
        );
        const btnContinuarEditar = document.getElementById(
            "btn-continuar-editar"
        );
        // Botones eliminar
        const btnEliminar = document.querySelectorAll(".btn-eliminar");
        const btnCancelarEliminar = document.getElementById(
            "btn-cancelar-eliminar"
        );
        const btnContinuarEliminar = document.getElementById(
            "btn-continuar-eliminar"
        );
        const btnCancelarConfirmar = document.getElementById(
            "btn-cancelar-confirmar"
        );
        const btnConfirmarEliminar = document.getElementById(
            "btn-confirmar-eliminar"
        );
        const btnAceptarNotificacion = document.getElementById(
            "btn-aceptar-notificacion"
        );
        // Variables para almacenar datos del elemento seleccionado
        let currentAtractivoId: string | null = null;
        let currentEmpresaId: string | null = null;
        let currentAtractivoNombre: string | null = null;
        let currentEmpresaNombre: string | null = null;
        let selectedOption: string | null = null;
        // Función para mostrar una notificación
        function mostrarNotificacion(
            titulo: string,
            mensaje: string,
            esExito: boolean = true,
            recargar: boolean = true
        ) {
            const tituloNotificacion = document.getElementById(
                "titulo-notificacion"
            );
            const textoNotificacion =
                document.getElementById("texto-notificacion");

            if (tituloNotificacion) {
                tituloNotificacion.textContent = titulo;
                tituloNotificacion.style.color = esExito
                    ? "#1A513B"
                    : "#d9534f";
            }

            if (textoNotificacion) {
                textoNotificacion.textContent = mensaje;
            }

            if (modalNotificacion) {
                modalNotificacion.classList.remove("hidden");

                // Configurar el botón Aceptar
                if (btnAceptarNotificacion) {
                    btnAceptarNotificacion.onclick = () => {
                        modalNotificacion.classList.add("hidden");
                        if (recargar && esExito) {
                            console.log("Recargando página después de operación exitosa...");
                            window.location.reload();
                        }
                    };
                }
            }
        }        // Modal de Editar
        if (btnEditar) {
            btnEditar.forEach((btn) => {
                btn.addEventListener("click", () => {
                    currentAtractivoId = btn.getAttribute("data-id");
                    currentEmpresaId = btn.getAttribute("data-empresa-id");
                    currentAtractivoNombre = btn.getAttribute(
                        "data-atractivo-nombre"
                    );
                    currentEmpresaNombre = btn.getAttribute(
                        "data-empresa-nombre"
                    );
                    const sinAtractivo =
                        btn.getAttribute("data-sin-atractivo") === "true";
                    const sinEmpresa =
                        btn.getAttribute("data-sin-empresa") === "true";

                    // Restablecer selección
                    document
                        .querySelectorAll("#modal-editar .modal-option")
                        .forEach((opt) => {
                            opt.classList.remove("selected");
                            opt.classList.remove("disabled");
                        });
                    selectedOption = null;
                    
                    // Si es una empresa sin atractivos, deshabilitar la opción de editar atractivo
                    if (sinAtractivo) {
                        const opcionAtractivo = document.querySelector(
                            '#modal-editar .modal-option[data-option="atractivo"]'
                        );
                        if (opcionAtractivo) {
                            opcionAtractivo.classList.add("disabled");

                            // Agregar descripción indicando que no hay atractivos
                            const descripcion = opcionAtractivo.querySelector(
                                ".modal-option-description"
                            );
                            if (descripcion) {
                                descripcion.textContent =
                                    "No hay atractivos disponibles para editar";
                            }
                        }
                    } 
                    // Si es un atractivo sin empresa, deshabilitar la opción de editar empresa
                    else if (sinEmpresa) {
                        const opcionEmpresa = document.querySelector(
                            '#modal-editar .modal-option[data-option="empresa"]'
                        );
                        if (opcionEmpresa) {
                            opcionEmpresa.classList.add("disabled");

                            // Agregar descripción indicando que no hay empresa
                            const descripcion = opcionEmpresa.querySelector(
                                ".modal-option-description"
                            );
                            if (descripcion) {
                                descripcion.textContent =
                                    "Este atractivo no tiene empresa asignada";
                            }
                        }
                        
                        // Restaurar el texto original para atractivos
                        const opcionAtractivo = document.querySelector(
                            '#modal-editar .modal-option[data-option="atractivo"]'
                        );
                        if (opcionAtractivo) {
                            const descripcion = opcionAtractivo.querySelector(
                                ".modal-option-description"
                            );
                            if (descripcion) {
                                descripcion.textContent =
                                    "Modificar la información del atractivo turístico";
                            }
                        }
                    } 
                    else {
                        // Restaurar el texto original para ambas opciones
                        const opcionAtractivo = document.querySelector(
                            '#modal-editar .modal-option[data-option="atractivo"]'
                        );
                        if (opcionAtractivo) {
                            const descripcion = opcionAtractivo.querySelector(
                                ".modal-option-description"
                            );
                            if (descripcion) {
                                descripcion.textContent =
                                    "Modificar la información del atractivo turístico";
                            }
                        }
                        
                        const opcionEmpresa = document.querySelector(
                            '#modal-editar .modal-option[data-option="empresa"]'
                        );
                        if (opcionEmpresa) {
                            const descripcion = opcionEmpresa.querySelector(
                                ".modal-option-description"
                            );
                            if (descripcion) {
                                descripcion.textContent =
                                    "Modificar la información de la empresa asociada";
                            }
                        }
                    }

                    // Mostrar modal
                    if (modalEditar) {
                        modalEditar.classList.remove("hidden");
                    }
                });
            });
        }
        // Selección de opción en modal de editar
        document
            .querySelectorAll("#modal-editar .modal-option")
            .forEach((option) => {
                option.addEventListener("click", () => {
                    // Si la opción está deshabilitada, no hacer nada
                    if (option.classList.contains("disabled")) {
                        return;
                    }

                    // Quitar selección de todos
                    document
                        .querySelectorAll("#modal-editar .modal-option")
                        .forEach((opt) => {
                            opt.classList.remove("selected");
                        });

                    // Aplicar selección al actual
                    option.classList.add("selected");
                    selectedOption = option.getAttribute("data-option");
                });
            });

        // Botón Cancelar editar
        if (btnCancelarEditar && modalEditar) {
            btnCancelarEditar.addEventListener("click", () => {
                modalEditar.classList.add("hidden");
            });
        }
        // Botón Continuar editar
        if (btnContinuarEditar && modalEditar) {
            btnContinuarEditar.addEventListener("click", () => {
                if (!selectedOption) {
                    mostrarNotificacion(
                        "Error",
                        "Por favor, selecciona una opción",
                        false,
                        false
                    );
                    return;
                }

                if (modalEditar) {
                    modalEditar.classList.add("hidden");
                }

                if (selectedOption === "atractivo" && currentAtractivoId) {
                    // Redirigir a página de edición de atractivo
                    window.location.href = `/admin/gestion-editar?id=${currentAtractivoId}`;
                } else if (selectedOption === "empresa" && currentEmpresaId) {
                    // Redirigir a página de edición de empresa
                    window.location.href = `/admin/empresas-editar?id=${currentEmpresaId}`;
                } else if (
                    selectedOption === "atractivo" &&
                    !currentAtractivoId
                ) {
                    // Intentó seleccionar un atractivo pero no hay ID (empresa sin atractivos)
                    mostrarNotificacion(
                        "Error",
                        "Esta empresa no tiene atractivos asociados",
                        false,
                        false
                    );
                } else {
                    mostrarNotificacion(
                        "Error",
                        "Ocurrió un error al procesar la solicitud",
                        false,
                        false
                    );
                }
            });
        } // Modal de Eliminar
        if (btnEliminar && modalEliminar) {
            btnEliminar.forEach((btn) => {
                btn.addEventListener("click", () => {
                    currentAtractivoId = btn.getAttribute("data-id");
                    currentEmpresaId = btn.getAttribute("data-empresa-id");
                    currentAtractivoNombre = btn.getAttribute(
                        "data-atractivo-nombre"
                    );
                    currentEmpresaNombre = btn.getAttribute(
                        "data-empresa-nombre"
                    );
                    const sinAtractivo =
                        btn.getAttribute("data-sin-atractivo") === "true";
                        
                    console.log("Botón eliminar clickeado:", {
                        currentAtractivoId,
                        currentEmpresaId,
                        currentAtractivoNombre,
                        currentEmpresaNombre,
                        sinAtractivo
                    });

                    // Restablecer selección
                    document
                        .querySelectorAll("#modal-eliminar .modal-option")
                        .forEach((opt) => {
                            opt.classList.remove("selected");
                            opt.classList.remove("disabled");
                        });
                    selectedOption = null;
                    // Si es una empresa sin atractivos, deshabilitar la opción de eliminar atractivo
                    // y seleccionar automáticamente la opción de eliminar empresa
                    if (sinAtractivo) {
                        const opcionAtractivo = document.querySelector(
                            '#modal-eliminar .modal-option[data-option="atractivo"]'
                        );
                        if (opcionAtractivo) {
                            opcionAtractivo.classList.add("disabled");

                            // Agregar descripción indicando que no hay atractivos
                            const descripcion = opcionAtractivo.querySelector(
                                ".modal-option-description"
                            );
                            if (descripcion) {
                                descripcion.textContent =
                                    "No hay atractivos disponibles para eliminar";
                            }
                        }
                        
                        // Seleccionar automáticamente la opción de eliminar empresa
                        const opcionEmpresa = document.querySelector(
                            '#modal-eliminar .modal-option[data-option="empresa"]'
                        );
                        if (opcionEmpresa) {
                            opcionEmpresa.classList.add("selected");
                            selectedOption = "empresa";
                        }
                    } else {
                        // Restaurar el texto original para empresas con atractivos
                        const opcionAtractivo = document.querySelector(
                            '#modal-eliminar .modal-option[data-option="atractivo"]'
                        );
                        if (opcionAtractivo) {
                            const descripcion = opcionAtractivo.querySelector(
                                ".modal-option-description"
                            );
                            if (descripcion) {
                                descripcion.textContent =
                                    "Eliminar solamente este atractivo turístico";
                            }
                        }
                    }

                    // Mostrar modal
                    modalEliminar.classList.remove("hidden");
                });
            });
        }
        // Selección de opción en modal de eliminar
        document
            .querySelectorAll("#modal-eliminar .modal-option")
            .forEach((option) => {
                option.addEventListener("click", () => {
                    // Si la opción está deshabilitada, no hacer nada
                    if (option.classList.contains("disabled")) {
                        return;
                    }

                    // Quitar selección de todos
                    document
                        .querySelectorAll("#modal-eliminar .modal-option")
                        .forEach((opt) => {
                            opt.classList.remove("selected");
                        });

                    // Aplicar selección al actual
                    option.classList.add("selected");
                    selectedOption = option.getAttribute("data-option");
                });
            });

        // Botón Cancelar eliminar
        if (btnCancelarEliminar && modalEliminar) {
            btnCancelarEliminar.addEventListener("click", () => {
                modalEliminar.classList.add("hidden");
            });
        }

        // Botón Continuar eliminar
        if (btnContinuarEliminar && modalEliminar && modalConfirmarEliminar) {
            btnContinuarEliminar.addEventListener("click", () => {
                if (!selectedOption) {
                    mostrarNotificacion(
                        "Error",
                        "Por favor, selecciona una opción",
                        false,
                        false
                    );
                    return;
                }

                modalEliminar.classList.add("hidden");

                // Configurar texto de confirmación
                const textoConfirmar = document.getElementById(
                    "texto-confirmar-eliminar"
                );
                if (textoConfirmar) {
                    if (selectedOption === "atractivo") {
                        textoConfirmar.textContent = `¿Estás seguro de que deseas eliminar el atractivo "${currentAtractivoNombre}"?`;
                    } else if (
                        selectedOption === "empresa" &&
                        currentEmpresaNombre
                    ) {
                        textoConfirmar.textContent = `¿Estás seguro de que deseas eliminar la empresa "${currentEmpresaNombre}" y todos sus atractivos asociados?`;
                    }
                }

                // Mostrar modal de confirmación
                modalConfirmarEliminar.classList.remove("hidden");
            });
        }

        // Botón Cancelar confirmación
        if (btnCancelarConfirmar && modalConfirmarEliminar) {
            btnCancelarConfirmar.addEventListener("click", () => {
                modalConfirmarEliminar.classList.add("hidden");
            });
        }

        // Botón Confirmar eliminación
        if (btnConfirmarEliminar && modalConfirmarEliminar) {
            btnConfirmarEliminar.addEventListener("click", async () => {
                modalConfirmarEliminar.classList.add("hidden");

                try {
                    let response;

                    if (selectedOption === "atractivo" && currentAtractivoId) {
                        // Eliminar atractivo
                        console.log("Intentando eliminar atractivo con ID:", currentAtractivoId);
                        
                        try {
                            response = await apiFetch(
                                `/api/atractivos/${currentAtractivoId}`,
                                {
                                    method: "DELETE",
                                }
                            );
                            
                            console.log("Respuesta del servidor:", response.status, response.statusText);
                            
                            if (response.ok) {
                                let mensaje = `El atractivo "${currentAtractivoNombre}" ha sido eliminado correctamente`;
                                try {
                                    const responseData = await response.json();
                                    mensaje = responseData.mensaje || mensaje;
                                } catch (e) {
                                    console.log("No se pudo obtener mensaje del servidor");
                                }
                                
                                mostrarNotificacion(
                                    "¡Éxito!",
                                    mensaje,
                                    true,
                                    true // Recargar la página después de aceptar
                                );
                            } else {
                                let errorMsg = "No se pudo eliminar el atractivo";
                                try {
                                    const errorData = await response.json();
                                    errorMsg = errorData.error || errorMsg;
                                } catch (e) {
                                    console.error("Error al procesar la respuesta:", e);
                                }
                                
                                mostrarNotificacion(
                                    "Error",
                                    `${errorMsg} (${response.status}: ${response.statusText})`,
                                    false,
                                    false
                                );
                            }
                        } catch (error) {
                            console.error("Error al eliminar atractivo:", error);
                            mostrarNotificacion(
                                "Error",
                                `Error de conexión: ${error instanceof Error ? error.message : "Error desconocido"}`,
                                false,
                                false
                            );
                        }
                    } else if (
                        selectedOption === "empresa" &&
                        currentEmpresaId
                    ) {
                        // Eliminar la empresa directamente (el backend se encargará de eliminar los atractivos asociados)
                        console.log("Intentando eliminar empresa con ID:", currentEmpresaId);
                        
                        try {
                            response = await apiFetch(
                                `/api/empresas/${currentEmpresaId}`,
                                {
                                    method: "DELETE",
                                }
                            );
                            
                            console.log("Respuesta del servidor:", response.status, response.statusText);
                            
                            if (response.ok) {
                                let mensaje = `La empresa "${currentEmpresaNombre}" y sus atractivos asociados han sido eliminados correctamente`;
                                try {
                                    const responseData = await response.json();
                                    mensaje = responseData.mensaje || mensaje;
                                } catch (e) {
                                    console.log("No se pudo obtener mensaje del servidor");
                                }
                                
                                mostrarNotificacion(
                                    "¡Éxito!",
                                    mensaje,
                                    true,
                                    true // Recargar la página después de aceptar
                                );
                            } else {
                                let errorMsg = "No se pudo eliminar la empresa";
                                try {
                                    const errorData = await response.json();
                                    errorMsg = errorData.error || errorMsg;
                                } catch (e) {
                                    console.error("Error al procesar la respuesta:", e);
                                }
                                
                                mostrarNotificacion(
                                    "Error",
                                    `${errorMsg} (${response.status}: ${response.statusText})`,
                                    false,
                                    false
                                );
                            }
                        } catch (error) {
                            console.error("Error al eliminar empresa:", error);
                            mostrarNotificacion(
                                "Error",
                                `Error de conexión: ${error instanceof Error ? error.message : "Error desconocido"}`,
                                false,
                                false
                            );
                        }
                    }
                } catch (error) {
                    console.error("Error:", error);
                    mostrarNotificacion(
                        "Error",
                        "Ha ocurrido un error durante la eliminación",
                        false,
                        false
                    );
                }
            });
        }

        // Prevenir envíos múltiples de formularios
        const forms = document.querySelectorAll("form");
        forms.forEach((form) => {
            form.addEventListener("submit", function (e: Event) {
                // Solo aplicar prevención a formularios de modales, no al formulario de filtros
                if (this.id === "filtros-form") {
                    return; // Permitir el envío normal del formulario de filtros
                }
                
                // Verificar si el formulario ya está enviando
                if (this.classList.contains("enviando")) {
                    e.preventDefault();
                    return false;
                }

                // Marcar el formulario como enviando
                this.classList.add("enviando");
                // Deshabilitar todos los botones submit del formulario
                const submitButtons = this.querySelectorAll(
                    'button[type="submit"]'
                );
                submitButtons.forEach((button) => {
                    const submitButton = button as HTMLButtonElement;
                    // Guardar el texto original
                    const textoOriginal = submitButton.textContent || "";
                    submitButton.dataset.textoOriginal = textoOriginal;

                    // Cambiar texto y deshabilitar
                    submitButton.textContent = "Procesando...";
                    submitButton.classList.add("procesando");
                    submitButton.disabled = true;
                });

                // Timeout de seguridad para restablecer el formulario en caso de error
                setTimeout(() => {
                    if (this.classList.contains("enviando")) {
                        this.classList.remove("enviando");
                        submitButtons.forEach((button) => {
                            const submitButton = button as HTMLButtonElement;
                            submitButton.textContent =
                                submitButton.dataset.textoOriginal || "";
                            submitButton.classList.remove("procesando");
                            submitButton.disabled = false;
                        });
                    }
                }, 5000); // 5 segundos de timeout
            });
        });

        // Cerrar modales haciendo clic fuera
        [
            modalEditar,
            modalEliminar,
            modalConfirmarEliminar,
            modalNotificacion,
        ].forEach((modal) => {
            if (modal) {
                modal.addEventListener("click", (e) => {
                    if (e.target === modal) {
                        modal.classList.add("hidden");
                    }
                });
            }
        });
    });

    // Mejorar funcionalidad de filtros
    document.addEventListener("DOMContentLoaded", () => {
        const filtrosForm = document.getElementById("filtros-form") as HTMLFormElement;
        
        // Los filtros solo se aplicarán cuando se presione el botón "Filtrar"
        // El formulario se envía normalmente sin interferencia de JavaScript
        
        // Mejorar accesibilidad: añadir tooltips dinámicos
        const updateTooltips = () => {
            const botones = document.querySelectorAll(".acciones .btn") as NodeListOf<HTMLElement>;
            botones.forEach(btn => {
                const empresaNombre = btn.getAttribute("data-empresa-nombre");
                const atractivoNombre = btn.getAttribute("data-atractivo-nombre");
                const sinAtractivo = btn.getAttribute("data-sin-atractivo");
                const sinEmpresa = btn.getAttribute("data-sin-empresa");
                
                let tooltip = "";
                
                if (btn.classList.contains("btn-agregar")) {
                    if (empresaNombre && empresaNombre !== "-") {
                        tooltip = `Agregar nuevo atractivo a ${empresaNombre}`;
                    } else {
                        tooltip = "Agregar nuevo atractivo";
                    }
                } else if (btn.classList.contains("btn-editar")) {
                    if (sinAtractivo) {
                        tooltip = `Editar empresa: ${empresaNombre}`;
                    } else if (sinEmpresa === "true") {
                        tooltip = `Editar atractivo: ${atractivoNombre} (sin empresa asignada)`;
                    } else {
                        tooltip = `Editar atractivo: ${atractivoNombre}`;
                    }
                } else if (btn.classList.contains("btn-eliminar")) {
                    if (sinAtractivo) {
                        tooltip = `Eliminar empresa: ${empresaNombre}`;
                    } else if (sinEmpresa === "true") {
                        tooltip = `Eliminar atractivo: ${atractivoNombre} (sin empresa asignada)`;
                    } else {
                        tooltip = `Eliminar atractivo: ${atractivoNombre}`;
                    }
                }
                
                if (tooltip) {
                    btn.setAttribute("title", tooltip);
                }
            });
        };
        
        updateTooltips();
    });
</script>
